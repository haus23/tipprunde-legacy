/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TurnierImport } from './routes/$turnier'
import { Route as IndexImport } from './routes/index'
import { Route as TurnierIndexImport } from './routes/$turnier/index'
import { Route as TurnierSpielerImport } from './routes/$turnier/spieler'
import { Route as TurnierSpielImport } from './routes/$turnier/spiel'

// Create/Update Routes

const TurnierRoute = TurnierImport.update({
  id: '/$turnier',
  path: '/$turnier',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TurnierIndexRoute = TurnierIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TurnierRoute,
} as any)

const TurnierSpielerRoute = TurnierSpielerImport.update({
  id: '/spieler',
  path: '/spieler',
  getParentRoute: () => TurnierRoute,
} as any)

const TurnierSpielRoute = TurnierSpielImport.update({
  id: '/spiel',
  path: '/spiel',
  getParentRoute: () => TurnierRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$turnier': {
      id: '/$turnier'
      path: '/$turnier'
      fullPath: '/$turnier'
      preLoaderRoute: typeof TurnierImport
      parentRoute: typeof rootRoute
    }
    '/$turnier/spiel': {
      id: '/$turnier/spiel'
      path: '/spiel'
      fullPath: '/$turnier/spiel'
      preLoaderRoute: typeof TurnierSpielImport
      parentRoute: typeof TurnierImport
    }
    '/$turnier/spieler': {
      id: '/$turnier/spieler'
      path: '/spieler'
      fullPath: '/$turnier/spieler'
      preLoaderRoute: typeof TurnierSpielerImport
      parentRoute: typeof TurnierImport
    }
    '/$turnier/': {
      id: '/$turnier/'
      path: '/'
      fullPath: '/$turnier/'
      preLoaderRoute: typeof TurnierIndexImport
      parentRoute: typeof TurnierImport
    }
  }
}

// Create and export the route tree

interface TurnierRouteChildren {
  TurnierSpielRoute: typeof TurnierSpielRoute
  TurnierSpielerRoute: typeof TurnierSpielerRoute
  TurnierIndexRoute: typeof TurnierIndexRoute
}

const TurnierRouteChildren: TurnierRouteChildren = {
  TurnierSpielRoute: TurnierSpielRoute,
  TurnierSpielerRoute: TurnierSpielerRoute,
  TurnierIndexRoute: TurnierIndexRoute,
}

const TurnierRouteWithChildren =
  TurnierRoute._addFileChildren(TurnierRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$turnier': typeof TurnierRouteWithChildren
  '/$turnier/spiel': typeof TurnierSpielRoute
  '/$turnier/spieler': typeof TurnierSpielerRoute
  '/$turnier/': typeof TurnierIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$turnier/spiel': typeof TurnierSpielRoute
  '/$turnier/spieler': typeof TurnierSpielerRoute
  '/$turnier': typeof TurnierIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$turnier': typeof TurnierRouteWithChildren
  '/$turnier/spiel': typeof TurnierSpielRoute
  '/$turnier/spieler': typeof TurnierSpielerRoute
  '/$turnier/': typeof TurnierIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$turnier'
    | '/$turnier/spiel'
    | '/$turnier/spieler'
    | '/$turnier/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$turnier/spiel' | '/$turnier/spieler' | '/$turnier'
  id:
    | '__root__'
    | '/'
    | '/$turnier'
    | '/$turnier/spiel'
    | '/$turnier/spieler'
    | '/$turnier/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TurnierRoute: typeof TurnierRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TurnierRoute: TurnierRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$turnier"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$turnier": {
      "filePath": "$turnier.tsx",
      "children": [
        "/$turnier/spiel",
        "/$turnier/spieler",
        "/$turnier/"
      ]
    },
    "/$turnier/spiel": {
      "filePath": "$turnier/spiel.tsx",
      "parent": "/$turnier"
    },
    "/$turnier/spieler": {
      "filePath": "$turnier/spieler.tsx",
      "parent": "/$turnier"
    },
    "/$turnier/": {
      "filePath": "$turnier/index.tsx",
      "parent": "/$turnier"
    }
  }
}
ROUTE_MANIFEST_END */
